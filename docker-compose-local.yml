# Start with a single host which will bootstrap the cluster.
# In production we'll want to use an HA cluster.
consul:
    image: progrium/consul:latest
    restart: always
    mem_limit: 128m
    ports:
      - "8500:8500"
    expose:
      - 53
      - 8300
      - 8301
      - 8302
      - 8400
      - 8500
    dns:
      - 127.0.0.1
    command: -server -bootstrap -ui-dir /ui


# The first instance will automatically bootstrap the Couchbase cluster.
# Scale this tier and each additional instance will automatically
# self-configure as a member of the cluster
couchbase:
    image: autopilotpattern/couchbase:enterprise-4.0.0-r2 # r3 TODO
    restart: always
    mem_limit: 1g
    ports:
      - 8091
      - 8092
      - 8093
    expose:
      - 8091
      - 8092
      - 8093
      - 11207
      - 11210
      - 11211
      - 18091
      - 18092
    links:
      - consul:consul
    env_file: _env


# the main application
touchbase:
    build: .
    restart: always
    mem_limit: 128m
    ports:
      - 3000
    links:
      - consul:consul
    env_file: _env
    command: >
      /opt/containerpilot/containerpilot
      -config file:///opt/containerpilot/touchbase.json
      node /usr/local/lib/node_modules/Couch411/app.js


# Nginx as a load-balancing tier and reverse proxy
nginx:
    build: nginx/
    restart: always
    mem_limit: 128m
    ports:
      - 80
    expose:
      - 80
      - 9090
    links:
      - consul:consul
    env_file: _env
    environment:
      - CONTAINERPILOT=file:///opt/containerpilot/nginx.json
    command: >
      /opt/containerpilot/containerpilot
      nginx -g "daemon off;"


# Prometheus server to gather telemetry
prometheus:
    image: autopilotpattern/prometheus
    mem_limit: 128m
    restart: always
    ports:
      - "9090:9090"
    expose:
      - 9090
    links:
      - consul:consul
    env_file: _env
    environment:
      - CONSUL=consul
